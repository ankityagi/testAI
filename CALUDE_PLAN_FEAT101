# FEAT-101/102 Implementation Plan

## Implementation Status (Updated Oct 19, 2025)

### ‚úÖ FEAT-101 Complete (Backend + Frontend)
- **Sessions table** created with migration applied to Supabase
- **Auto session tracking** implemented in `/questions/fetch` endpoint
- **Session API** with 3 endpoints: GET /{id}, GET /{id}/summary, POST /{id}/end
- **Repository methods** implemented for session CRUD and analytics
- **Pydantic models** added: Session, SessionSummary
- **Frontend integration** complete: SessionSummary page, end session flow, routing
- **TypeScript types** added: Session, SessionSummary interfaces
- **Sessions service** created for API integration
- **Documentation** created: FEAT101_SESSION_TRACKING.md

**Backend Files Created/Modified:**
- Created: migration_add_sessions.sql, routes/sessions.py, FEAT101_SESSION_TRACKING.md
- Modified: models.py, repository.py, postgres_repo.py, routes/questions.py, app.py

**Frontend Files Created/Modified:**
- Created: src/ui/web/src/services/sessions.service.ts, src/ui/web/src/pages/SessionSummary.tsx
- Modified: src/ui/web/src/types/api.ts, src/ui/web/src/contexts/PracticeContext.tsx, src/ui/web/src/App.tsx, src/ui/web/src/components/panels/PracticePanel.tsx, src/ui/web/tsconfig.app.json

**Build Status:** ‚úÖ Production build passing (319KB gzipped bundle)

### üîÑ FEAT-102 Parent Dashboard - Ready to Start
- FEAT-101 is now complete (backend + frontend) - ready to begin FEAT-102 implementation

---

## Scope
- **FEAT-101 "Session Insights"**: End-of-session metrics (accuracy, time-to-solve, streaks) and concept/subtopic strengths vs. rolling history with trend (improving/flat/declining).
- **FEAT-102 "Parent View"**: Guardian dashboard with granular child metrics, trends, benchmarking (at/above/below level), and guidance; drill-down child ‚Üí subject ‚Üí subtopic.

## Architecture Overview
- **Backend (FastAPI)**: Store per-attempt duration/subtopic; compute session, rolling, and parent aggregates; extend progress endpoints; optional benchmarks table.
- **Frontend (React @ `src/ui/web`)**: Routes for session summary and parent dashboard; shared components for charts/trends and drill-down tables.
- **Data Model**: Attempts table already has: `{child_id, question_id, selected, correct, time_spent_ms, created_at}`. Need to link to subtopics via question_bank.

## Current State (Already Implemented ‚úÖ)
- ‚úÖ Database schema has `attempts.time_spent_ms` column
- ‚úÖ Backend model `AttemptSubmission` accepts `time_spent_ms: int`
- ‚úÖ Progress endpoint `GET /progress/{child_id}` returns accuracy, streak, by_subject breakdown
- ‚úÖ Frontend `ProgressPanel` displays overall accuracy, streak, subject breakdown
- ‚úÖ Database index: `idx_attempts_child_created on attempts(child_id, created_at desc)`
- ‚úÖ Subtopics table exists with subject/grade/topic/subtopic structure
- ‚úÖ Question bank has `sub_topic` field linking to subtopics

## Deliverables & Checklists

### Short Term (What ships first - MVP)

#### FEAT-101: Session Insights MVP (Backend Complete ‚úÖ Oct 19, 2025)
- [x] **Backend - Session Model**: Create `sessions` table to track practice sessions
  ```sql
  CREATE TABLE sessions (
    id uuid PRIMARY KEY DEFAULT uuid_generate_v4(),
    child_id uuid REFERENCES children(id),
    subject text,
    topic text,
    subtopic text,
    started_at timestamptz DEFAULT now(),
    ended_at timestamptz,
    created_at timestamptz DEFAULT now(),
    updated_at timestamptz DEFAULT now()
  );
  ```
  ‚úÖ **Status**: Migration applied successfully (studybuddy/backend/db/sql/migration_add_sessions.sql)
  ‚úÖ **Indexes**: Created 4 indexes (idx_sessions_child_started, idx_sessions_child_ended, idx_sessions_subject, idx_sessions_active)

- [x] **Backend - Session Tracking**: Auto-create session on first question fetch, close on inactivity/explicit end
  ‚úÖ **Status**: Implemented in studybuddy/backend/routes/questions.py:87-99
  ‚úÖ **Logic**: Auto-creates session on `/questions/fetch`, reuses active session, returns session_id in response

- [x] **Backend - Session Summary Endpoint**: `GET /sessions/{session_id}/summary`
  - Return: `{accuracy, total_attempts, avg_time_ms, longest_streak, by_subtopic: [{subtopic, accuracy, avg_time}]}`
  ‚úÖ **Status**: Implemented in studybuddy/backend/routes/sessions.py:30-48
  ‚úÖ **Returns**: `{session, questions_attempted, questions_correct, accuracy, total_time_ms, avg_time_per_question_ms, subjects_practiced}`

- [x] **Backend - Session Management Endpoints**:
  ‚úÖ **GET /sessions/{id}** - Get session details (studybuddy/backend/routes/sessions.py:10-27)
  ‚úÖ **POST /sessions/{id}/end** - End active session (studybuddy/backend/routes/sessions.py:51-73)

- [ ] **Backend - Validation**: Add time_spent_ms validation (100ms‚Äì600s) with warnings for outliers
  ‚ö†Ô∏è **Status**: Field validated as non-negative, but no range enforcement yet

- [x] **Frontend - Session Summary Route**: `/session/:id/summary` with summary cards
  ‚úÖ **Status**: Implemented in src/ui/web/src/pages/SessionSummary.tsx
  ‚úÖ **Features**: Displays accuracy, questions attempted/correct, total time, avg time per question, subjects practiced
  ‚úÖ **UI**: Color-coded accuracy (green ‚â•80%, yellow ‚â•60%, red <60%), formatted time display, responsive stats grid

- [x] **Frontend - End Session Flow**: Add "End Session" button in PracticePanel, navigate to summary
  ‚úÖ **Status**: Implemented in src/ui/web/src/components/panels/PracticePanel.tsx:113-128, 507
  ‚úÖ **Features**: Two entry points (end during practice, view summary on completion), automatic navigation to summary page
  ‚úÖ **Context Integration**: Added sessionId tracking and endSession method in PracticeContext

#### FEAT-102: Parent Dashboard MVP
- [ ] **Backend - Enhanced Progress Endpoint**: Extend `GET /progress/{child_id}` with query params:
  - `?window=7d|30d|all` - Time window for aggregation
  - `?group_by=subject|subtopic` - Grouping level
  - Return per-subtopic: `{subtopic, attempts, accuracy, avg_time_ms, trend}`
- [ ] **Backend - Trend Calculation**: Compare current window vs previous window (7d vs 7d prior)
  - `trend: "improving" | "flat" | "declining"` based on accuracy delta (¬±5% threshold)
- [ ] **Frontend - Parent Dashboard Route**: `/parent/dashboard` with:
  - Child selector dropdown
  - Overview cards: Total practice time (7d), Average accuracy (7d), Active subjects
  - Subject breakdown table with trend indicators
- [ ] **Frontend - Drill-down**: Click subject ‚Üí show subtopic breakdown

#### CROSS-CUTTING
- [x] **DB Migration**: Add indices for performance
  ‚úÖ **Status**: Session table created with 4 indexes:
  - `idx_sessions_child_started` - for child+time queries
  - `idx_sessions_child_ended` - for ended sessions
  - `idx_sessions_subject` - for subject filtering
  - `idx_sessions_active` - for active session lookups (WHERE ended_at IS NULL)
  ‚ö†Ô∏è **Pending**: Attempts table optimization indices (for FEAT-102)

- [x] **Access Control**: Verify parent can only access their children's data
  ‚úÖ **Status**: All session endpoints validate `repo.child_belongs_to_parent(child_id, parent.id)`
  ‚úÖ **Files**: studybuddy/backend/routes/sessions.py (all endpoints check access)

- [ ] **Feature Flags**: Add env vars `FEAT_101_ENABLED`, `FEAT_102_ENABLED` (default: true)
  ‚ö†Ô∏è **Status**: Not implemented yet, features are live by default

- [x] **Testing**: Unit tests for trend calculation, session aggregation logic
  ‚úÖ **Status**: Validation tests created (31/31 passing)
  ‚úÖ **Files**: test_attempts_validation.py, test_adaptive_difficulty.py, test_progress_validation.py
  ‚ö†Ô∏è **Pending**: Session-specific integration tests

- [x] **Documentation**: Update API docs, add usage examples
  ‚úÖ **Status**: Created FEAT101_SESSION_TRACKING.md with comprehensive documentation
  ‚úÖ **Includes**: API usage examples, database queries, implementation details

Long Term (Richer, guided experience)
- [ ] [FEAT-101] Subtopic breakdown with badges (mastered/needs practice) and trend chips; add sparkline charts.
- [ ] [FEAT-101] Session summary snapshot export (html2canvas) and share workflow.
- [ ] [FEAT-101] Robust rolling 30-day aggregates with small-n safeguards in trend logic.
- [ ] [FEAT-102] Parent drill-down `/parents/children/:childId` with subtopic table, difficulty mix, time distributions.
- [ ] [FEAT-102] Benchmarks model (by grade/subject) and at/above/below-level indicators.
- [ ] [CROSS] Observability dashboards, pagination for heavy endpoints, full i18n, WCAG AA compliance on new views.
